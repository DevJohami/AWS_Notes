AZ=`curl -s http://169.254.169.254/latest/meta-data/placement/availability-zone`
   2  export AWS_DEFAULT_REGION=${AZ::-1}
   3  AMI=$(aws ssm get-parameters --names /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2 --query 'Parameters[0].[Value]' --output text)
   echo $AMI
   SUBNET=$(aws ec2 describe-subnets --filters 'Name=tag:Name,Values=Public Subnet' --query Subnets[].SubnetId --output text)
   echo $SUBNET
   echo $AZ
    SG=$(aws ec2 describe-security-groups --filters Name=group-name,Values=WebSecurityGroup --query SecurityGroups[].GroupId --output text)
    echo $SG
   wget https://aws-tc-largeobjects.s3.us-west-2.amazonaws.com/CUR-TF-100-RESTRT-1/171-lab-JAWS-create-ec2/s3/UserData.txt
    cat UserData.txt
   INSTANCE=$(\
aws ec2 run-instances \
--image-id $AMI \
--subnet-id $SUBNET \
--security-group-ids $SG \
--user-data file:///home/ec2-user/UserData.txt \
--instance-type t3.micro \
--tag-specifications 'ResourceType=instance,Tags=[{Key=Name,Value=Web Server}]' \
--query 'Instances[*].InstanceId' \
--output text \
)
    aws ec2 describe-instances --instance-ids $INSTANCE --query 'Reservations[].Instances[].State.Name' --output text
     echo $INSTANCE
   aws ec2 describe-instances --instance-ids $INSTANCE --query Reservations[].Instances[].PublicDnsName --output text
    aws ec2 authorize-security-group-ingress --group-name Challenge-SG --protocol tcp --port 22 --cidr 203.0.113.0/24 vpcid=vpc-0a2b73b8100df7235
    aws ec2 authorize-security-group-ingress --group-id sg-0922e62e570e2859d --protocol tcp --port 22 --cidr 0.0.0.0/0
     history
     ls
git clone https://github.com/DevJohami/AWS_Notes.git
sudo yum install git -y
git clone https://github.com/DevJohami/AWS_Notes.git
history > ./AWS_Notes/historyfile.txt
